import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler, MinMaxScaler
from sklearn.cluster import AgglomerativeClustering
from sklearn.svm import SVC
from sklearn.metrics import classification_report
from sklearn.model_selection import train_test_split
from tensorflow.keras.models import Sequential # type: ignore
from tensorflow.keras.layers import LSTM, Dense # type: ignore

st.title("üíª Machine Learning Models")
st.write(
    "Let's start exploring!"
)
data = pd.read_csv("dataset/most-dangerous-countries-for-women-2024.csv", encoding='ISO-8859-1') 
data2 = pd.read_csv("dataset/Environment_Temperature_change_E_All_Data_NOFLAG.csv", encoding='ISO-8859-1')

# Data cleaning
data.fillna(-1, inplace=True)
data2.fillna(0, inplace=True)
st.header("About Datasets")
st.text("üåêExample The Most Dangerous Countries For Women data in dataset")
st.write(data.head())
st.markdown("""
Download dataset from [Most Dangerous Countries For Women](https://www.kaggle.com/datasets/arpitsinghaiml/most-dangerous-countries-for-women-2024)

### Features of the Dataset:
- **country**: Name of the country
- **MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023**: Women, Peace and Security Index score for 2023. Lower scores indicate greater danger.
- **MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019**: Women's Danger Index total score for 2019. Higher scores indicate greater danger.
- **MostDangerousCountriesForWomen_WDIStreetSafety_2019**: Women's Danger Index score for street safety in 2019.
- **MostDangerousCountriesForWomen_WDIIntentionalHomicide_2019**: Women's Danger Index score for intentional homicide in 2019.
- **MostDangerousCountriesForWomen_WDINonPartnerViolence_2019**: Women's Danger Index score for non-partner violence in 2019.
- **MostDangerousCountriesForWomen_WDIIntimatePartnerViolence_2019**: Women's Danger Index score for intimate partner violence in 2019.
- **MostDangerousCountriesForWomen_WDILegalDiscrimination_2019**: Women's Danger Index score for legal discrimination in 2019.
- **MostDangerousCountriesForWomen_WDIGlobalGenderGap_2019**: Women's Danger Index score for global gender gap in 2019.
- **MostDangerousCountriesForWomen_WDIGenderInequality_2019**: Women's Danger Index score for gender inequality in 2019.
- **MostDangerousCountriesForWomen_WDIAttitudesTowardViolence_2019**: Women's Danger Index score for attitudes toward violence in 2019.
""")
st.text("üö®Example Temperature Change data in dataset")
st.write(data2.head())
st.markdown("""
Download dataset from [Temperature Change Dataset](https://www.kaggle.com/datasets/sevgisarac/temperature-change)

### Features of the Dataset:
- **Area Code**: ‡∏£‡∏´‡∏±‡∏™‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
- **Months Code**: ‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
- **Months**: ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
- **Element Code**: ‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö
- **Element**: ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Temperature change and Standard Deviation)
- **Unit**: ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (¬∞C)
- **Y1961 - Y2019**: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏õ‡∏µ 1961 ‡∏ñ‡∏∂‡∏á 2019
""")
st.sidebar.title("Navigation")
page = st.sidebar.radio("Choose a page", ["About Machine Learning", "About Neural Network", "Machine Learning Demo", "Neural Network Demo"])
if page  == "About Machine Learning":
#‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ó‡∏§‡∏©‡∏é‡∏µ‡∏Ç‡∏≠‡∏á‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏í‡∏ô‡∏≤ ‡πÅ‡∏•‡∏∞‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•
    st.title("üìúAbout Machine Learning")
    st.subheader("Development Plan")
    st.text("‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ 2 Datasets ‡πÇ‡∏î‡∏¢ Dataset‡∏ó‡∏µ‡πà 1 ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡πÅ‡∏•‡∏∞ Dataset‡∏ó‡∏µ‡πà 2 ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡∏ó‡∏±‡πà‡∏ß‡πÇ‡∏•‡∏Å‡∏õ‡∏µ 1961-2019")
    st.markdown(""" 
**1. Data Preparation**
- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏à‡∏≤‡∏Å CSV ‡πÑ‡∏ü‡∏•‡πå
- ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Dataset‡∏ó‡∏µ‡πà 1 ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡πà‡∏≤ Missing ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢ -1 
- ‡πÉ‡∏ô Dataset‡∏ó‡∏µ‡πà 1 ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'country', 'MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023','MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019','MostDangerousCountriesForWomen_WDIGenderInequality_2019' 
    * ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö SVM ‡πÉ‡∏ä‡πâ X ‡πÄ‡∏õ‡πá‡∏ô‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏ó‡πà‡∏≤‡πÄ‡∏ó‡∏µ‡∏¢‡∏°‡∏ó‡∏≤‡∏á‡πÄ‡∏û‡∏®‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏î‡∏±‡∏ä‡∏ô‡∏µ(MostDangerousCountriesForWomen_WDIGenderInequality_2019 (‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏°‡∏≠‡∏†‡∏≤‡∏Ñ‡∏ó‡∏≤‡∏á‡πÄ‡∏û‡∏®), MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019 (‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á)) ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ y ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡πâ‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å KMeans Clustering ‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡πà‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô 3 ‡∏Å‡∏•‡∏∏‡πà‡∏° ‡πÇ‡∏î‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∏‡∏î training ‡πÅ‡∏•‡∏∞ testing ‡πÉ‡∏ä‡πâ train_test_split
    * ‡πÅ‡∏•‡πâ‡∏ßModel‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏∞‡∏Ñ‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô -1 ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡πÉ‡∏ä‡πâ StandardScaler ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πÄ‡∏Å‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö 0 ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏ö‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏ö‡∏ô‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö 1
                
**2. The Theory of the Developed Algorithm (K-Means Clustering, Agglomerative Clustering, SVM Classifier)**
- **K-Means Clustering**
    * ‡∏ó‡∏§‡∏©‡∏é‡∏µ-KMeans ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ò‡∏∂‡∏°‡∏Å‡∏≤‡∏£ Clustering ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Label ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠ Unsupervised Learning ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô K ‡∏Å‡∏•‡∏∏‡πà‡∏° ‡∏ã‡∏∂‡πà‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Ñ‡∏•‡∏∂‡∏á‡∏Å‡∏±‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏•‡∏∏‡πà‡∏° Centroid ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠‡∏û‡∏∂‡πà‡πà‡∏á‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏à‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ô
    * ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•
        * ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö KMeans Model ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏ï‡πâ‡∏ô
        * ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô KMeans ‡∏Ñ‡∏∑‡∏≠ Dataset‡∏ó‡∏µ‡πà 1 ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° K ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥ KMeans Clustering ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ Elbow Method ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏£‡∏≤‡∏ü‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Within-Cluster Sum of Squares (WCSS) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á k ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà 1 ‡∏ñ‡∏∂‡∏á 14 ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤ k ‡∏à‡∏≤‡∏Å‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á WCSS ‡∏ó‡∏µ‡πà‡∏•‡∏î‡∏•‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡πà‡∏≤‡∏™‡∏≠‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
        * ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏≤ k ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö 3 ‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ KMeans ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô 3 ‡∏Å‡∏•‡∏∏‡πà‡∏° ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 1 ‡∏Ñ‡∏∑‡∏≠ Most Safe for Women ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 2 ‡∏Ñ‡∏∑‡∏≠ Average Safe for Women ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 3 ‡∏Ñ‡∏∑‡∏≠ Least Safe for Women
        * ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏£‡∏≤‡∏ü ‡∏ó‡∏µ‡πà‡∏ã‡∏∂‡πà‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ñ‡∏π‡∏Å‡∏à‡∏±‡∏î‡∏≠‡∏¢‡∏π‡πà
        * ‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ä‡πâ Scatter plot ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ WomenPeaceAndSecurityIndex_Score_2023 ‡πÅ‡∏•‡∏∞ WomensDangerIndexWDI_TotalScore_2019 ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏Å‡∏ô X ‡πÅ‡∏•‡∏∞ Y ‡πÅ‡∏•‡∏∞‡∏ö‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÉ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü
        * ‡∏™‡∏µ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü‡∏à‡∏∞‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏≤‡∏°‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏•‡∏∏‡πà‡∏° 3 ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÇ‡∏î‡∏¢‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà1 ‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà2 ‡πÅ‡∏•‡∏∞‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà3 
        * ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏ô‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏µnavy ‡πÅ‡∏•‡∏∞‡∏Ç‡∏ô‡∏≤‡∏î‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô 
- **Agglomerative Clustering**
    * ‡∏ó‡∏§‡∏©‡∏é‡∏µ-‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ò‡∏∂‡∏°‡∏Å‡∏≤‡∏£ Clustering ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Label ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡πâ‡∏≤‡∏¢‡∏Å‡∏≥‡∏Å‡∏±‡∏ö ‡∏Ñ‡∏∑‡∏≠ Unsupervised Learning ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ Hierarchical Clustering ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏à‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏µ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≠‡∏¢ ‡πÜ ‡∏£‡∏ß‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Å‡∏±‡∏ô‡∏à‡∏ô‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Ñ‡∏•‡∏∂‡∏á‡∏Å‡∏±‡∏ô‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    * ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•
        * ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö Agglomerative Model ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏ï‡πâ‡∏ô
        * ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 3 ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÉ‡∏ô KMeans Clustering ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ô
        * ‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®
        * ‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ä‡πâ Scatter plot ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ WomenPeaceAndSecurityIndex_Score_2023 ‡πÅ‡∏•‡∏∞ WomensDangerIndexWDI_TotalScore_2019 ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏Å‡∏ô X ‡πÅ‡∏•‡∏∞ Y ‡πÅ‡∏•‡∏∞‡∏ö‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÉ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü
        * ‡∏™‡∏µ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü‡∏à‡∏∞‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏≤‡∏°‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏•‡∏∏‡πà‡∏° 3 ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡πá‡∏à‡∏∞‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö‡∏Ç‡∏≠‡∏á KMeans Clustering
- **SVM Classifier**
    * ‡∏ó‡∏§‡∏©‡∏é‡∏µ-SVM ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ò‡∏∂‡∏°‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Supervised Learning ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î(hyperplane)‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏Å‡∏•‡∏∏‡πà‡∏° ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏ï‡∏£‡∏á
    * ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•
        * ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∏‡∏î training ‡πÅ‡∏•‡∏∞ testing ‡πÉ‡∏ä‡πâ train_test_split ‡πÇ‡∏î‡∏¢ X_train ‡πÅ‡∏•‡∏∞ X_test ‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∏‡∏î‡∏ù‡∏∂‡∏Å‡∏Å‡∏±‡∏ö‡∏•‡∏∏‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡πÅ‡∏•‡∏∞ y_train ‡πÅ‡∏•‡∏∞ y_test ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ ‡∏Ñ‡∏•‡∏±‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å KMeans ‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∏‡∏î‡∏ù‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏ä‡∏∏‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö 
        * ‡∏™‡∏£‡πâ‡∏≤‡∏á SVM Model ‡πÉ‡∏ä‡πâ SVC ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏•‡∏≤‡∏™‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÉ‡∏ô SVM ‡πÇ‡∏î‡∏¢‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå random_state=42 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏°‡∏µ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ
        * Model ‡∏ù‡∏∂‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πÄ‡∏Å‡∏•‡πÅ‡∏•‡πâ‡∏ß X_train_scaled ‡πÅ‡∏•‡∏∞ y_train ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ SVM ‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏Ñ‡∏•‡∏±‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏à‡∏≤‡∏Å‡πÉ‡∏ô KMeans ‡∏´‡∏•‡∏±‡∏á‡∏ù‡∏∂‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à Model ‡∏à‡∏∞‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•‡πÉ‡∏ô‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• X_test_scaled ‡∏ã‡∏∂‡πà‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á svm.predict(X_test_scaled)
        * ‡πÉ‡∏ä‡πâ SVM ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏ó‡πà‡∏≤‡πÄ‡∏ó‡∏µ‡∏¢‡∏°‡∏ó‡∏≤‡∏á‡πÄ‡∏û‡∏®‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÇ‡∏î‡∏¢‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏ó‡πà‡∏≤‡πÄ‡∏ó‡∏µ‡∏¢‡∏°‡∏ó‡∏≤‡∏á‡πÄ‡∏û‡∏®
        * ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•‡∏Ç‡∏≠‡∏á SVM ‡∏à‡∏∞‡πÉ‡∏ä‡πâ Classification Report ‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ ‡∏°‡∏µ Precision, Recall, F1-Score, Accuracy ‡∏Ç‡∏≠‡∏áModel ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏•‡∏±‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå
        * ‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ä‡πâ Scatter plot ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏ä‡∏ß‡πå‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ç‡∏≠‡∏áModel ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏à‡∏≤‡∏Å SVM ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢(X) ‡∏™‡∏µ blue ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÇ‡∏î‡∏¢ SVM ‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏´‡∏ô 
        * ‡∏Å‡∏£‡∏≤‡∏ü‡∏à‡∏∞‡∏°‡∏µ ‡πÅ‡∏Å‡∏ô X ‡πÄ‡∏õ‡πá‡∏ô Women‚ÄôsDangerIndexGenderInequality_2019 ‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡∏ô Y ‡πÄ‡∏õ‡πá‡∏ô Women‚ÄôsDangerIndexWDI_TotalScore_2019 ‡πÅ‡∏•‡∏∞‡∏™‡∏µ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü‡∏à‡∏∞‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏≤‡∏°‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏•‡∏∏‡πà‡∏° 3 ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö‡∏Ç‡∏≠‡∏á KMeans Clustering
        """)
elif page  == "About Neural Network":
#‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ó‡∏§‡∏©‡∏é‡∏µ‡∏Ç‡∏≠‡∏á‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏í‡∏ô‡∏≤ ‡πÅ‡∏•‡∏∞‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•
    st.title("üìúAbout Neural Network")
    st.subheader("Development Plan")
    st.text("‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ 2 Datasets ‡πÇ‡∏î‡∏¢ Dataset‡∏ó‡∏µ‡πà 1 ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡πÅ‡∏•‡∏∞ Dataset‡∏ó‡∏µ‡πà 2 ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡∏ó‡∏±‡πà‡∏ß‡πÇ‡∏•‡∏Å‡∏õ‡∏µ 1961-2019")
    st.markdown(""" 
**1. Data Preparation**
- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏à‡∏≤‡∏Å CSV ‡πÑ‡∏ü‡∏•‡πå
- ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Dataset‡∏ó‡∏µ‡πà 2 ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡πà‡∏≤ Missing ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢ 0
- ‡πÉ‡∏ô Dataset‡∏ó‡∏µ‡πà 2 ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏öThailand ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ôTemperature change ‡∏à‡∏≤‡∏Å‡∏õ‡∏µ 1961-2019 ‡πÇ‡∏î‡∏¢ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà 1961‡πÅ‡∏•‡πâ‡∏ß‡∏ö‡∏ß‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏µ‡∏•‡∏∞ 3 ‡∏õ‡∏µ 
    * ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å wide format ‡πÄ‡∏õ‡πá‡∏ô long format ‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏õ‡∏µ‡∏à‡∏∞‡πÅ‡∏¢‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå ‡πÄ‡∏ä‡πà‡∏ô Y1961 ‡πÄ‡∏õ‡πá‡∏ô 1 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÅ‡∏Ñ‡πà 2 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå ‡∏Ñ‡∏∑‡∏≠ ‡∏õ‡∏µ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏µ ‡∏Ñ‡∏∑‡∏≠ ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå Year ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå ‡∏Ñ‡πà‡∏≤TemperatureChange 
    * ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏µ‡∏à‡∏≤‡∏Å Y1961 ‡πÄ‡∏õ‡πá‡∏ô 1961 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÑ‡∏î‡πâ 
    * ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏•‡∏ö‡∏Ñ‡πà‡∏≤ Missing ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏Ñ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
    * ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏à‡∏±‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏õ‡∏µ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ô TemperatureChange ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡∏≤‡∏°‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏µ
    * ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡πá‡πÉ‡∏ä‡πâ MinMaxScaler ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏™‡πÄ‡∏Å‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á LSTM ‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 0-1
- ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö LSTM ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Dataset 2 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏∏‡∏î‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 6 ‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡πÉ‡∏ô‡∏õ‡∏µ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ 

**2. The Theory of the Developed Algorithm**
- **LSTM Neural Network (Long Short-Term Memory)**
    * ‡∏ó‡∏§‡∏©‡∏é‡∏µ-LSTM ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó RNN(Recurrent Neural Network) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡πÑ‡∏î‡πâ‡∏î‡∏µ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö Dataset ‡∏ó‡∏µ‡πà 2 ‡∏ó‡∏µ‡πà‡∏ô‡∏≥‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á Model ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏õ‡∏µ
    * ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•
        * ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• LSTM ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏ï‡πâ‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏ô‡∏ñ‡∏∂‡∏á‡∏õ‡∏µ 2019 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å LSTM ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ data_for_lstm_thailand
        * ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏à‡∏∞‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÇ‡∏î‡∏¢‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô create_dataset ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏µ‡∏¢‡∏°‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô X ‡πÅ‡∏•‡∏∞ y ‡πÉ‡∏ä‡πâ‡∏ù‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏ó‡∏î‡∏™‡∏≠‡∏öModel
        * ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡πá‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á 6 ‡∏õ‡∏µ‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤(X)‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ Temperature change‡πÉ‡∏ô‡∏õ‡∏µ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ(y)
        * ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏à‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• X ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ç‡πâ‡∏≤ LSTM ‡πÅ‡∏•‡πâ‡∏ß X ‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö[samples, time steps, features]
        * LSTM Model ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Sequential model ‡πÉ‡∏ô Keras ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° LSTM ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏ä‡∏±‡πâ‡∏ô ‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Units ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏±‡πâ‡∏ô ‡∏ã‡∏∂‡πà‡∏á‡∏ä‡∏±‡πâ‡∏ô‡πÅ‡∏£‡∏Å‡∏°‡∏µ Unit ‡πÅ‡∏•‡∏∞ return_sequences=True ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå ‡∏ä‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á‡∏°‡∏µ Unit ‡πÅ‡∏•‡∏∞return_sequences=False ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á
        * ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡∏±‡πâ‡∏ô Dense ‡∏ó‡∏µ‡πà‡∏°‡∏µ units = 1 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢Temperature Change
        * ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ complie model ‡∏à‡∏∞‡πÉ‡∏ä‡πâ Adam Optimizer ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏ámodel‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡πÅ‡∏•‡∏∞ mean squared error loss ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏î‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ loss 
        * Model ‡∏ñ‡∏π‡∏Å‡∏ù‡∏∂‡∏Å‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö 10 epoch ‡∏ö‡∏ô‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏ï (‡∏õ‡∏µ 2020-2029) ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≠‡∏ö ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 32 ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á (batch)
        * ‡πÉ‡∏ä‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏µ 2020 ‡∏ñ‡∏∂‡∏á 2029) ‡πÉ‡∏ä‡πâ Forecasting Future Data ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï Historical Data ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• TemperatureChange‡πÉ‡∏ô‡∏õ‡∏µ 1961-2019 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏µ‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏∏‡∏î‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ä‡∏∏‡∏î‡∏ù‡∏∂‡∏Å(last_sequence) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ñ‡πà‡∏≤Temperature Change‡πÉ‡∏ô‡∏õ‡∏µ‡∏ï‡πà‡∏≠‡πÑ‡∏õ ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏µ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÉ‡∏ô‡∏õ‡∏µ‡∏ï‡πà‡∏≠‡πÑ‡∏õ ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡πá‡∏¢‡πâ‡∏≠‡∏ô‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏à‡∏£‡∏¥‡∏á ‡πÜ 
        """)
elif page == "Machine Learning Demo":
    st.title("üìäMachine Learning Demo")
    data = pd.read_csv("dataset/most-dangerous-countries-for-women-2024.csv", encoding='ISO-8859-1') 

    # Data cleaning
    data.fillna(-1, inplace=True)

    scaler = StandardScaler()
    used_data = data[['country', 'MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023',
                    'MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019',
                  'MostDangerousCountriesForWomen_WDIGenderInequality_2019']]
    used_data = used_data[(used_data['MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023'] != -1) &
                       (used_data['MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019'] != -1) &
                        (used_data['MostDangerousCountriesForWomen_WDIGenderInequality_2019'] != -1)]

    X_scaled = scaler.fit_transform(used_data[['MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023',
                                            'MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019',
                                           'MostDangerousCountriesForWomen_WDIGenderInequality_2019']])
#Elbow Method
    wcss =[]
    for i in range(1, 15):
        kmeans = KMeans(n_clusters = i, random_state=42, n_init=10)
        kmeans.fit(X_scaled)
        wcss.append(kmeans.inertia_)

    fig, ax = plt.subplots(figsize=(8,5))
    ax.plot(range(1, 15), wcss, marker='o', linestyle='--')
    ax.set_xlabel('Number of Clusters')
    ax.set_ylabel('WCSS')
    ax.set_title('Elbow Method for Optimal k')
    st.pyplot(fig) 

# KMeans Clustering
    kmeans = KMeans(n_clusters=3, random_state=42, n_init=10)
    used_data['KMeans_Cluster'] = kmeans.fit_predict(X_scaled)
    cluster_labels_kmeans = {0: 'Average Safety for Women', 1: 'Least Safe for Women', 2: 'Most Safe for Women'}
    used_data['KMeans_Cluster_Label'] = used_data['KMeans_Cluster'].map(cluster_labels_kmeans)
    st.subheader("K-Means Clustering")
# ‡πÇ‡∏ä‡∏ß‡πåKMeans Clusters
    st.write("KMeans Clustering Results")
    st.write(used_data[['country', 'KMeans_Cluster_Label']])
    cluster_colors = {0: 'yellow', 1: 'red', 2: 'green'}

# ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏î‡∏π‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞
    country_list = used_data['country'].unique()
    selected_country = st.selectbox("Select a Country", country_list)
    selected_country_data = used_data[used_data['country'] == selected_country]
    st.subheader(f"Data for {selected_country}")
    st.write("KMeans Cluster Label:", selected_country_data['KMeans_Cluster_Label'].values[0])

# ‡∏Å‡∏£‡∏≤‡∏üKMeans
    fig, ax = plt.subplots(figsize=(10, 6))
    ax.scatter(used_data['MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023'],
            used_data['MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019'],
            c=used_data['KMeans_Cluster'].map(cluster_colors), alpha=0.6)
    ax.scatter(selected_country_data['MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023'],
            selected_country_data['MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019'],
            c='white', s=200, label=f"{selected_country} (Selected)", edgecolor='navy', linewidth=2)
    for i, row in used_data.iterrows():
        plt.scatter(row['MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023'],
            row['MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019'],
            c=cluster_colors[row['KMeans_Cluster']], s=150, alpha=0.6)
    for i, country in enumerate(used_data['country']):
        if country == selected_country:
            plt.text(used_data['MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023'].iloc[i]+0.002,
                 used_data['MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019'].iloc[i]+2,
                 country, fontsize=8, ha='left', color='navy', weight='bold')
        else:
            plt.text(used_data['MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023'].iloc[i]+0.002,
                 used_data['MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019'].iloc[i]+2,
                 country, fontsize=6, ha='left', color='black')
    ax.set_title('KMeans Clusters for Women Safety')
    ax.set_xlabel('WomenPeaceAndSecurityIndex_Score_2023')
    ax.set_ylabel('Women‚ÄôsDangerIndexWDI_TotalScore_2019')
    legend_labels = ['Average Safety for Women', 'Least Safe for Women', 'Most Safe for Women']
    handles = [plt.Line2D([0], [0], marker='o', color='w', markerfacecolor=color, markersize=10) for color in cluster_colors.values()]
    ax.legend(handles, legend_labels, title="Cluster Labels")
    st.pyplot(fig)

# Agglomerative Clustering
    agg_clust = AgglomerativeClustering(n_clusters=3)
    used_data['Agglomerative_Cluster'] = agg_clust.fit_predict(X_scaled)  
    cluster_labels_agg = {0: 'Average Safety for Women', 1: 'Most Safe for Women', 2: 'Least Safe for Women'}
    used_data['Agglomerative_Cluster_Label'] = used_data['Agglomerative_Cluster'].map(cluster_labels_agg)
    st.subheader("Agglomerative Clustering")
# ‡πÇ‡∏ä‡∏ß‡πåAGG C
    st.write("Agglomerative Clustering Results")
    st.write(used_data[['country', 'Agglomerative_Cluster_Label']])
# ‡πÇ‡∏ä‡∏ß‡πå‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô
    selected_country_data = used_data[used_data['country'] == selected_country]
    st.write("Agglomerative Cluster Label:", selected_country_data['Agglomerative_Cluster_Label'].values[0])

    color_map_agg = {0: 'yellow', 1:'green', 2:'red'}
# ‡∏Å‡∏£‡∏≤‡∏üAgglomerative Clustering
    fig, ax = plt.subplots(figsize=(10, 6))
    ax.scatter(used_data['MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023'],
            used_data['MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019'],
            c=used_data['Agglomerative_Cluster'].map(color_map_agg), alpha=0.6)
    ax.scatter(selected_country_data['MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023'],
            selected_country_data['MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019'],
            c='white', s=200, label=f"{selected_country} (Selected)", edgecolor='navy', linewidth=2)
    for i, row in used_data.iterrows():
        ax.scatter(row['MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023'],
                row['MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019'],
                c=color_map_agg[row['Agglomerative_Cluster']], s=150, alpha=0.6)
    for i, country in enumerate(used_data['country']):
        if country == selected_country:
            plt.text(used_data['MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023'].iloc[i]+0.002,
                 used_data['MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019'].iloc[i]+2,
                 country, fontsize=8, ha='left', color='navy', weight='bold')
        else:
            plt.text(used_data['MostDangerousCountriesForWomen_WomenPeaceAndSecurityIndex_Score_2023'].iloc[i]+0.002,
                 used_data['MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019'].iloc[i]+2,
                 country, fontsize=6, ha='left', color='black')
    ax.set_title('Agglomerative Clustering for Women Safety')
    ax.set_xlabel('WomenPeaceAndSecurityIndex_Score_2023')
    ax.set_ylabel('Women‚ÄôsDangerIndexWDI_TotalScore_2019')
    legend_labels = ['Average Safety for Women', 'Least Safe for Women', 'Most Safe for Women']
    handles = [plt.Line2D([0], [0], marker='o', color='w', markerfacecolor=color, markersize=10) for color in cluster_colors.values()]
    ax.legend(handles, legend_labels, title="Cluster Labels")
    st.pyplot(fig)

# SVM Classifier
    X = used_data[['MostDangerousCountriesForWomen_WDIGenderInequality_2019',
               'MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019']]
    y = used_data['KMeans_Cluster']
# ‡∏ù‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    X_train_scaled = scaler.fit_transform(X_train)
    X_test_scaled = scaler.transform(X_test)
# ‡πÉ‡∏ä‡πâSVC ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
    svm = SVC(random_state=42)
    svm.fit(X_train_scaled, y_train)
    y_pred_svm = svm.predict(X_test_scaled)
#‡πÅ‡∏™‡∏î‡∏á report‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Recall, F1-Score,...
    st.write("SVM Classification Report")
    st.text(classification_report(y_test, y_pred_svm))
    st.subheader("SVM Classifier")
#‡∏Å‡∏£‡∏≤‡∏üSVM
    color_map_svm = {0: 'yellow', 1:'green', 2:'red'}
    fig, ax = plt.subplots(figsize=(14,11))
    for i, row in used_data.iterrows():
        ax.scatter(row['MostDangerousCountriesForWomen_WDIGenderInequality_2019'],
                row['MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019'],
                c=color_map_svm[row['Agglomerative_Cluster']], s=150, alpha=0.6)
    for i, country in enumerate(used_data['country']):
        plt.text(used_data['MostDangerousCountriesForWomen_WDIGenderInequality_2019'].iloc[i],
             used_data['MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019'].iloc[i]+2,
             country, fontsize=6, ha='left')
    for i, pred in enumerate(y_pred_svm):
        plt.scatter(X_test.iloc[i]['MostDangerousCountriesForWomen_WDIGenderInequality_2019'],
                X_test.iloc[i]['MostDangerousCountriesForWomen_WomensDangerIndexWDI_TotalScore_2019'],
                c='blue', marker='x', s=150, label="Predicted" if i == 0 else " ")

    ax.set_xlabel('Women‚ÄôsDangerIndexGenderInequality_2019')
    ax.set_ylabel('Women‚ÄôsDangerIndexWDI_TotalScore_2019')
    ax.set_title('SVM Predictions for Women Gender Inequality 2019')
    st.pyplot(fig)

elif page == "Neural Network Demo":
    st.title("üìäNeural Network Demo")
#Neural Network(LSTM-tensorflow/keras)
# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ
    temperature_data_thailand = data2[['Area', 'Y1961', 'Y1964', 'Y1967', 'Y1970', 'Y1973', 'Y1976', 'Y1979', 'Y1982', 'Y1985', 'Y1988', 'Y1991', 'Y1994', 'Y1997', 'Y2000', 'Y2003', 'Y2006', 'Y2009', 'Y2012', 'Y2015', 'Y2018', 'Y2019', 'Element']]
    temperature_data_thailand = temperature_data_thailand[temperature_data_thailand['Element'] == 'Temperature change']
    temperature_data_thailand = temperature_data_thailand[temperature_data_thailand['Area'] == 'Thailand']  # Filter for Thailand

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏õ‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏≠‡∏°‡∏•‡∏±‡∏°‡∏ô‡πå ‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå(‡∏õ‡∏µ ‡∏Å‡∏±‡∏ö ‡∏Ñ‡πà‡∏≤ Temperature Change)
    temperature_data_thailand = temperature_data_thailand.melt(id_vars=['Area', 'Element'], var_name='Year', value_name='TemperatureChange')

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Y1961 ‡πÄ‡∏õ‡πá‡∏ô 1961 ...
    temperature_data_thailand['Year'] = temperature_data_thailand['Year'].str.extract('(\d+)').astype(int)
# ‡πÉ‡∏ä‡πâ‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ ‡πÅ‡∏•‡∏∞ ‡∏ï‡∏±‡∏î‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏≠‡∏≠‡∏Å
    temperature_data_thailand = temperature_data_thailand[['Area', 'Year', 'TemperatureChange']]
    temperature_data_thailand = temperature_data_thailand.dropna()
# ‡∏à‡∏±‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏µ‡πÅ‡∏•‡∏∞‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Ç‡∏≠‡∏á Temperature Change ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏µ
    temperature_data_thailand_yearly = temperature_data_thailand.groupby('Year').agg({'TemperatureChange': 'mean'}).reset_index()

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏ô‡∏ñ‡∏∂‡∏á‡∏õ‡∏µ2019
    data_for_lstm_thailand = temperature_data_thailand_yearly[temperature_data_thailand_yearly['Year'] <= 2019]

# ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏≤‡∏î Temperature Change
    scaler = MinMaxScaler(feature_range=(0, 1))
    data_for_lstm_thailand['TemperatureChange'] = scaler.fit_transform(data_for_lstm_thailand['TemperatureChange'].values.reshape(-1, 1))
# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 6 ‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤
    time_step = 6
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠ LSTM
    def create_dataset(dataset, time_step):
        X, y = [], []
        for i in range(time_step, len(dataset)):
            X.append(dataset[i-time_step:i, 0]) 
            y.append(dataset[i, 0])  
        return np.array(X), np.array(y)
# ‡∏ó‡∏≥ dataset ‡πÄ‡∏û‡∏∑‡πà‡∏≠ LSTM
    dataset = data_for_lstm_thailand['TemperatureChange'].values
    dataset = dataset.reshape(-1, 1)  
    X, y = create_dataset(dataset, time_step)
# ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• X ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ç‡πâ‡∏≤ LSTM ‡πÅ‡∏•‡πâ‡∏ß X ‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö[samples, time steps, features]
    X = X.reshape(X.shape[0], X.shape[1], 1)

    model = Sequential()
    model.add(LSTM(units=90, return_sequences=True, input_shape=(X.shape[1], 1)))
    model.add(LSTM(units=90, return_sequences=False))
    model.add(Dense(units=1)) 

# Compile
    model.compile(optimizer='adam', loss='mean_squared_error')
# ‡∏ù‡∏∂‡∏Å
    model.fit(X, y, epochs=10, batch_size=32)

# ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÑ‡∏õ‡∏≠‡∏µ‡∏Å 10 ‡∏õ‡∏µ
    future_years = np.arange(2020, 2030) 
    future_data = []
#‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏∏‡∏î‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ä‡∏∏‡∏î‡∏ù‡∏∂‡∏Å
    last_sequence = data_for_lstm_thailand.iloc[-time_step:, 1].values  

# ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï
    for year in future_years:
    # ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏µ
        last_sequence_input = last_sequence.reshape((1, time_step, 1))
        next_pred = model.predict(last_sequence_input)
        future_data.append(next_pred[0, 0]) 
    # ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏õ‡∏µ‡∏ï‡πà‡∏≠‡πÑ‡∏õ
        last_sequence = np.roll(last_sequence, -1)
        last_sequence[-1] = next_pred[0, 0]

# ‡∏¢‡πâ‡∏≠‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏à‡∏£‡∏¥‡∏á ‡πÜ 
    future_data = scaler.inverse_transform(np.array(future_data).reshape(-1, 1))
# ‡∏£‡∏ß‡∏°‡∏õ‡∏µ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡∏õ‡∏µ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï
    all_years = np.concatenate([temperature_data_thailand_yearly['Year'], future_years])
    all_data = np.concatenate([temperature_data_thailand_yearly['TemperatureChange'], future_data.flatten()])
    st.subheader("LSTM Neural Network")
    st.title("Thailand Average Yearly Temperature Change (1961-2030)")
    st.subheader("Choose a Year to View Temperature Change")
# ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏î‡∏π
    selected_year = st.selectbox('Select Year:', all_years)
    if selected_year in future_years:
    # ‡∏õ‡∏µ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï ‡∏î‡∏π‡∏ú‡∏•‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÉ‡∏ô‡∏õ‡∏µ‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï
        predicted_temperature = future_data[future_years.tolist().index(selected_year)]
        st.write(f"Predicted temperature change for the year {selected_year}: {predicted_temperature[0]:.2f} ¬∞C")
    else:
    # ‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏µ‡∏ô‡∏±‡πâ‡∏ô‡πÜ‡∏ó‡∏µ‡πà‡∏°‡∏µ
        historical_temperature = temperature_data_thailand_yearly[temperature_data_thailand_yearly['Year'] == selected_year]['TemperatureChange'].values[0]
        st.write(f"Temperature change for the year {selected_year}: {historical_temperature:.2f} ¬∞C")

# ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤ Temperature Change ‡∏Å‡∏±‡∏ö Average temperature change ‡∏Ç‡∏≠‡∏á‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    historical_data = temperature_data_thailand_yearly[temperature_data_thailand_yearly['Year'] <= selected_year]
    average_temperature_change = historical_data['TemperatureChange'].mean()
    st.write(f"Average temperature change up to the year {selected_year}: {average_temperature_change:.2f} ¬∞C")

# ‡∏Å‡∏£‡∏≤‡∏ü LSTM 
    fig, ax = plt.subplots(figsize=(10, 6))
    ax.plot(temperature_data_thailand_yearly['Year'], temperature_data_thailand_yearly['TemperatureChange'], label='Historical Data', marker='o')
    ax.plot(future_years, future_data, label='Predicted Future Data', color='red')
    ax.set_xlabel('Year')
    ax.set_ylabel('Average Temperature Change (¬∞C)')
    ax.set_title('Average Yearly Temperature Change in Thailand (1961-2030)')
    ax.grid(True)
    ax.legend()
    st.pyplot(fig)
